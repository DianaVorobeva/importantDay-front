{"ast":null,"code":"// // import InputMask from \"react-input-mask\";\n// import { useForm } from 'react-hook-form';\n// import React from \"react\";\n\n// function FormFeedback() {\n\n//     const BUTTON_WRAPPER_STYLES = {\n//         position: 'relative',\n//         zIndex: 1\n//       }\n\n//       const OTHER_CONTENT_STYLES = {\n//         position: 'relative',\n//         zIndex: 2,\n//         backgroundColor: 'red',\n//         padding: '10px'\n//       }\n\n//     const {\n//         register,\n//         handleSubmit,\n//         reset,\n//         formState: { errors, isValid },\n//       } = useForm({\n//         mode:\"onBlur\"\n//       });\n\n// //       let formData = document.forms.communication;\n// // let xhr = new XMLHttpRequest();\n\n// // function goSendIt() {\n// //   if (formData.user.value && formData.tel.value) {\n// //     let obj = {\n// //       name: formData.user.value,\n// //       num: formData.tel.value\n// //     }\n// //     let str = JSON.stringify(obj);\n// //     xhr.open(\"POST\", \"/message/\");\n// //     xhr.send(str);\n// //     xhr.onreadystatechange = function() {\n// //       if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n// //         console.log(xhr.responseText);\n// //       }\n// //     }\n// //   } else {\n// //     alert(\"Не заполнена\")\n// //   }\n// //   reset()\n// // }\n\n//     return (\n//         <div className=\"modalForm\">\n//             <div className=\"modal__title\">\n//                 Оставьте заявку \n//             </div>\n//             <div className=\"modal__description\">\n//                 Наш эксперт развлечений ответит на&nbsp;все ваши вопросы. \n//             </div>\n//             <form  method=\"POST\" action=\"/send-notification\" name=\"communication\" className=\"gray-form vertical-form\">\n//                 <label className=\"input\">\n//                     <label className=\"input__label menu-18 gray-form\" >Имя</label>\n//                     <input \n//                     {...register('userName', { \n//                         required: \"*Поле обязательно к заполнению\",\n//                         minLength: {\n//                             value:2,\n//                             message: \"Минимум 2 символа\"\n//                         }\n//                      })}\n//                      type=\"text\" \n//                      id=\"userName\"\n//                      name=\"userName\"\n//                      placeholder=\"Как вас зовут?\" \n//                      data-label=\"Имя пользователя\" \n//                      className=\"input-text\"\n//                      />\n//                 </label>\n//                 <div style={{height:40}}>\n//                     {errors?.user && <p className=\"errors\"> {errors?.user.message || \"Error!\"}</p>}\n//                 </div>\n//                 <label className=\"input\">\n//                     <label className=\"input__label menu-18 gray-form\">Телефон*</label>\n//                     <input \n//                     {...register('tel', { \n//                         required: \"*Поле обязательно к заполнению\"\n//                      })}\n//                     type=\"tel\" \n//                     name=\"tel\" \n//                     id=\"tel\"\n//                     placeholder=\"Введите телефон*\" \n//                     data-label=\"Телефон\"  \n//                     data-req=\"true\" \n//                     className=\"input-text\" \n//                     mask=\"+7 999 999 99 99\">\n//                   </input>\n\n//                 </label>\n//                 <div style={{height:40}}>\n//                     {errors?.tel && <p className=\"errors\"> {errors?.tel.message || \"Error!\"}</p>}\n//                 </div>\n//                 <button className=\"btnCTA center\" type=\"submit\" disabled={!isValid}>Отправить</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default FormFeedback;","map":{"version":3,"names":[],"sources":["/Users/Diana/Desktop/importantDay/src/Form/FormFeedback.js"],"sourcesContent":["// // import InputMask from \"react-input-mask\";\n// import { useForm } from 'react-hook-form';\n// import React from \"react\";\n\n\n// function FormFeedback() {\n\n//     const BUTTON_WRAPPER_STYLES = {\n//         position: 'relative',\n//         zIndex: 1\n//       }\n      \n//       const OTHER_CONTENT_STYLES = {\n//         position: 'relative',\n//         zIndex: 2,\n//         backgroundColor: 'red',\n//         padding: '10px'\n//       }\n\n//     const {\n//         register,\n//         handleSubmit,\n//         reset,\n//         formState: { errors, isValid },\n//       } = useForm({\n//         mode:\"onBlur\"\n//       });\n\n      \n// //       let formData = document.forms.communication;\n// // let xhr = new XMLHttpRequest();\n\n// // function goSendIt() {\n// //   if (formData.user.value && formData.tel.value) {\n// //     let obj = {\n// //       name: formData.user.value,\n// //       num: formData.tel.value\n// //     }\n// //     let str = JSON.stringify(obj);\n// //     xhr.open(\"POST\", \"/message/\");\n// //     xhr.send(str);\n// //     xhr.onreadystatechange = function() {\n// //       if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n// //         console.log(xhr.responseText);\n// //       }\n// //     }\n// //   } else {\n// //     alert(\"Не заполнена\")\n// //   }\n// //   reset()\n// // }\n\n\n//     return (\n//         <div className=\"modalForm\">\n//             <div className=\"modal__title\">\n//                 Оставьте заявку \n//             </div>\n//             <div className=\"modal__description\">\n//                 Наш эксперт развлечений ответит на&nbsp;все ваши вопросы. \n//             </div>\n//             <form  method=\"POST\" action=\"/send-notification\" name=\"communication\" className=\"gray-form vertical-form\">\n//                 <label className=\"input\">\n//                     <label className=\"input__label menu-18 gray-form\" >Имя</label>\n//                     <input \n//                     {...register('userName', { \n//                         required: \"*Поле обязательно к заполнению\",\n//                         minLength: {\n//                             value:2,\n//                             message: \"Минимум 2 символа\"\n//                         }\n//                      })}\n//                      type=\"text\" \n//                      id=\"userName\"\n//                      name=\"userName\"\n//                      placeholder=\"Как вас зовут?\" \n//                      data-label=\"Имя пользователя\" \n//                      className=\"input-text\"\n//                      />\n//                 </label>\n//                 <div style={{height:40}}>\n//                     {errors?.user && <p className=\"errors\"> {errors?.user.message || \"Error!\"}</p>}\n//                 </div>\n//                 <label className=\"input\">\n//                     <label className=\"input__label menu-18 gray-form\">Телефон*</label>\n//                     <input \n//                     {...register('tel', { \n//                         required: \"*Поле обязательно к заполнению\"\n//                      })}\n//                     type=\"tel\" \n//                     name=\"tel\" \n//                     id=\"tel\"\n//                     placeholder=\"Введите телефон*\" \n//                     data-label=\"Телефон\"  \n//                     data-req=\"true\" \n//                     className=\"input-text\" \n//                     mask=\"+7 999 999 99 99\">\n//                   </input>\n                    \n    \n//                 </label>\n//                 <div style={{height:40}}>\n//                     {errors?.tel && <p className=\"errors\"> {errors?.tel.message || \"Error!\"}</p>}\n//                 </div>\n//                 <button className=\"btnCTA center\" type=\"submit\" disabled={!isValid}>Отправить</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default FormFeedback;"],"mappings":"AAAA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}