{"ast":null,"code":"var _jsxFileName = \"/Users/Diana/Desktop/importantDay/src/Form/FormFeedback.js\",\n  _s = $RefreshSig$();\n// import InputMask from \"react-input-mask\";\nimport { useForm } from 'react-hook-form';\nimport React from \"react\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormFeedback() {\n  _s();\n  const BUTTON_WRAPPER_STYLES = {\n    position: 'relative',\n    zIndex: 1\n  };\n  const OTHER_CONTENT_STYLES = {\n    position: 'relative',\n    zIndex: 2,\n    backgroundColor: 'red',\n    padding: '10px'\n  };\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const [userName, setUserName] = useState('');\n  const [userTel, setUserTel] = useState('');\n  let xhr = new XMLHttpRequest();\n  function sendData() {\n    if (userName && formData.num.value) {\n      let userData = {\n        name: userName,\n        num: userTel\n      };\n      console.log(userData);\n      let str = JSON.stringify(userData);\n      xhr.open(\"POST\", \"/message/\");\n      xhr.send(str);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n          console.log(xhr.responseText);\n        }\n      };\n    } else {\n      alert(\"Не заполнена\");\n    }\n    reset();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__title\",\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__description\",\n      children: \"\\u041D\\u0430\\u0448 \\u044D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442 \\u0440\\u0430\\u0437\\u0432\\u043B\\u0435\\u0447\\u0435\\u043D\\u0438\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442 \\u043D\\u0430\\xA0\\u0432\\u0441\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      action: \"/send-notification\",\n      name: \"communication\",\n      className: \"gray-form vertical-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input__label menu-18 gray-form\",\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('userName', {\n            required: \"*Поле обязательно к заполнению\",\n            minLength: {\n              value: 2,\n              message: \"Минимум 2 символа\"\n            }\n          }),\n          type: \"text\",\n          id: \"userName\",\n          name: \"userName\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          placeholder: \"\\u041A\\u0430\\u043A \\u0432\\u0430\\u0441 \\u0437\\u043E\\u0432\\u0443\\u0442?\",\n          \"data-label\": \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n          className: \"input-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 40\n        },\n        children: (errors === null || errors === void 0 ? void 0 : errors.user) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errors\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.user.message) || \"Error!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input__label menu-18 gray-form\",\n          children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('tel', {\n            required: \"*Поле обязательно к заполнению\"\n          }),\n          type: \"tel\",\n          name: \"tel\",\n          value: userTel,\n          onChange: e => setUserTel(e.target.value),\n          id: \"tel\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D*\",\n          \"data-label\": \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          \"data-req\": \"true\",\n          className: \"input-text\",\n          mask: \"+7 999 999 99 99\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 40\n        },\n        children: (errors === null || errors === void 0 ? void 0 : errors.tel) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errors\",\n          children: [\" \", (errors === null || errors === void 0 ? void 0 : errors.tel.message) || \"Error!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit(sendData),\n        className: \"btnCTA center\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(FormFeedback, \"CZb/D+1AMbjs7CxHqRoID+gkZBY=\", false, function () {\n  return [useForm];\n});\n_c = FormFeedback;\nexport default FormFeedback;\nvar _c;\n$RefreshReg$(_c, \"FormFeedback\");","map":{"version":3,"names":["useForm","React","useState","jsxDEV","_jsxDEV","FormFeedback","_s","BUTTON_WRAPPER_STYLES","position","zIndex","OTHER_CONTENT_STYLES","backgroundColor","padding","register","handleSubmit","reset","formState","errors","isValid","mode","userName","setUserName","userTel","setUserTel","xhr","XMLHttpRequest","sendData","formData","num","value","userData","name","console","log","str","JSON","stringify","open","send","onreadystatechange","readyState","DONE","status","responseText","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","method","action","required","minLength","message","type","id","onChange","e","target","placeholder","style","height","user","mask","tel","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/Diana/Desktop/importantDay/src/Form/FormFeedback.js"],"sourcesContent":["// import InputMask from \"react-input-mask\";\nimport { useForm } from 'react-hook-form';\nimport React from \"react\";\nimport { useState } from 'react';\n\n\nfunction FormFeedback() {\n\n    const BUTTON_WRAPPER_STYLES = {\n        position: 'relative',\n        zIndex: 1\n      }\n      \n      const OTHER_CONTENT_STYLES = {\n        position: 'relative',\n        zIndex: 2,\n        backgroundColor: 'red',\n        padding: '10px'\n      }\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors, isValid },\n      } = useForm({\n        mode:\"onBlur\"\n      });\n\n      const [userName, setUserName] = useState('');\n      const [userTel, setUserTel] = useState('');\n     \nlet xhr = new XMLHttpRequest();\n\nfunction sendData() {\n  if (userName && formData.num.value) {\n    let userData = {\n      name: userName,\n      num: userTel\n    }\n    console.log(userData)\n\n    let str = JSON.stringify(userData);\n    xhr.open(\"POST\", \"/message/\");\n    xhr.send(str);\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n        console.log(xhr.responseText);\n      }\n    }\n  } else {\n    alert(\"Не заполнена\")\n  }\n  reset()\n}\n\n\n\n    return (\n        <div className=\"modalForm\">\n            <div className=\"modal__title\">\n                Оставьте заявку \n            </div>\n            <div className=\"modal__description\">\n                Наш эксперт развлечений ответит на&nbsp;все ваши вопросы. \n            </div>\n            <form  method=\"POST\" action=\"/send-notification\" name=\"communication\" className=\"gray-form vertical-form\">\n                <label className=\"input\">\n                    <label className=\"input__label menu-18 gray-form\" >Имя</label>\n                    <input \n                    {...register('userName', { \n                        required: \"*Поле обязательно к заполнению\",\n                        minLength: {\n                            value:2,\n                            message: \"Минимум 2 символа\"\n                        }\n                     })}\n                     type=\"text\" \n                     id=\"userName\"\n                     name=\"userName\"\n                     value={userName}\n                     onChange = {(e) => setUserName(e.target.value)}\n                     placeholder=\"Как вас зовут?\" \n                     data-label=\"Имя пользователя\" \n                     className=\"input-text\"\n                     />\n                </label>\n                <div style={{height:40}}>\n                    {errors?.user && <p className=\"errors\"> {errors?.user.message || \"Error!\"}</p>}\n                </div>\n                <label className=\"input\">\n                    <label className=\"input__label menu-18 gray-form\">Телефон*</label>\n                    <input \n                    {...register('tel', { \n                        required: \"*Поле обязательно к заполнению\"\n                     })}\n                    type=\"tel\" \n                    name=\"tel\" \n                    value={userTel}\n                    onChange = {(e) => setUserTel(e.target.value)}\n                    id=\"tel\"\n                    placeholder=\"Введите телефон*\" \n                    data-label=\"Телефон\"  \n                    data-req=\"true\" \n                    className=\"input-text\" \n                    mask=\"+7 999 999 99 99\">\n                  </input>\n                    \n    \n                </label>\n                <div style={{height:40}}>\n                    {errors?.tel && <p className=\"errors\"> {errors?.tel.message || \"Error!\"}</p>}\n                </div>\n                <button onClick={handleSubmit(sendData)} className=\"btnCTA center\" type=\"submit\" disabled={!isValid}>Отправить</button>\n            </form>\n        </div>\n    )\n}\n\nexport default FormFeedback;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}